apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-platform-android'

apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.applift"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.applift.CustomTestRunner"
    }

    buildFeatures{
        viewBinding = true
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        mock {
            dimension = 'default'
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension = 'default'
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    packagingOptions {
        pickFirst 'META-INF/kotlinx-io.kotlin_module'
        pickFirst 'META-INF/atomicfu.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-core.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-io.kotlin_module'
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }

    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
}

dependencies {

//
//    /**-------------------testing libs------------------------------------------**/
//    //UI Testing , AndroidJUnitRunner and JUnit Rules &Espresso dependencies
//    //junit 5
//    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
//    testImplementation 'org.junit.platform:junit-platform-runner:1.6.2'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation 'org.assertj:assertj-core:3.16.1'
//    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
//    androidTestImplementation ('androidx.test.espresso:espresso-core:3.2.0',{
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
//    implementation 'androidx.test:rules:1.2.0'
//    implementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
//    implementation 'androidx.test.espresso:espresso-contrib:3.2.0'
//    implementation 'androidx.arch.core:core-testing:2.1.0'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'
//
//    /**-------------------------------------------------------------**/


    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation deps.kotlin.stdlib
    implementation deps.app_compat
    implementation deps.material
    implementation deps.constraint_layout
    implementation deps.core_ktx

    //Lifecycle
    implementation deps.lifecycle.viewmodel_ktx
    implementation deps.lifecycle.livedata_ktx

    //Dagger
    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support

    kapt deps.dagger.compiler
    kaptAndroidTest deps.dagger.compiler

    kapt deps.dagger.android_support_compiler
//    kaptAndroidTest deps.dagger.android_support_compiler

    //Room
    implementation deps.room.runtime
    implementation deps.room.ktx
    implementation deps.room.rxjava2
    kapt deps.room.compiler
    androidTestImplementation deps.room.testing

    //MultiDex
    implementation deps.multiDex

    //Navigation
    implementation deps.navigation.fragment_ktx
    implementation deps.navigation.runtime_ktx
    implementation deps.fragment.runtime_ktx
    implementation(deps.fragment.testing)

//    //Mockk
    implementation deps.mockito.core
    implementation deps.mockito.android

    // Espresso and UI Testing
    androidTestImplementation deps.atsl.ext_junit
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.espresso.contrib
    androidTestImplementation deps.espresso.intents
    implementation deps.espresso.idlingResource
    androidTestImplementation deps.navigation.testing
    androidTestImplementation deps.truth

    // Host-side tests
    testImplementation deps.atsl.ext_junit
    testImplementation deps.robolectric

    // Espresso API running in Robolectric
    testImplementation deps.espresso.core
    testImplementation deps.espresso.contrib
    testImplementation deps.espresso.intents
    testImplementation deps.navigation.testing
    testImplementation deps.truth
}