apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-platform-android'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.applift"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures{
        viewBinding = true
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        mock {
            dimension = 'default'
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension = 'default'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
    }
    defaultConfig {
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    packagingOptions {
        pickFirst 'META-INF/kotlinx-io.kotlin_module'
        pickFirst 'META-INF/atomicfu.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-core.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-io.kotlin_module'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}

dependencies {

//    implementation fileTree(dir: 'libs', include: ['*.jar'])
//
//    //kotlin
//    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72'
//    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.72'
//
//    //android support & recyclerview
//    implementation 'androidx.recyclerview:recyclerview:1.1.0'
//    implementation 'androidx.appcompat:appcompat:1.1.0'
//    implementation 'com.google.android.material:material:1.3.0-alpha01'
//    implementation 'androidx.core:core-ktx:1.3.0'
//    implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//    implementation 'androidx.cardview:cardview:1.0.0'
//
//    // Dagger
//    def dagger_version = "2.23.2"
//
//    // Dagger2 core
//    implementation "com.google.dagger:dagger:$dagger_version"
//    kapt "com.google.dagger:dagger-compiler:$dagger_version"
//
//    // Dagger Android
//    implementation "com.google.dagger:dagger-android:$dagger_version"
//    implementation "com.google.dagger:dagger-android-support:$dagger_version"
//    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
//
//    //MultiDex
//    implementation 'androidx.multidex:multidex:2.0.1'
//
//    //Mockk
//    implementation 'io.mockk:mockk:1.10.0'
//
//    def room_version = "2.2.5"
//    implementation "androidx.room:room-runtime:$room_version"
//    kapt "androidx.room:room-compiler:$room_version"
//    implementation "androidx.room:room-rxjava2:$room_version"
//
//    //coroutines
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.7'
//    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-alpha04'
//    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-alpha04'
//

//
//    /**-------------------testing libs------------------------------------------**/
//    //UI Testing , AndroidJUnitRunner and JUnit Rules &Espresso dependencies
//    //junit 5
//    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
//    testImplementation 'org.junit.platform:junit-platform-runner:1.6.2'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation 'org.assertj:assertj-core:3.16.1'
//    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
//    androidTestImplementation ('androidx.test.espresso:espresso-core:3.2.0',{
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
//    implementation 'androidx.test:rules:1.2.0'
//    implementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
//    implementation 'androidx.test.espresso:espresso-contrib:3.2.0'
//    implementation 'androidx.arch.core:core-testing:2.1.0'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'
//
//    /**-------------------------------------------------------------**/


    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation deps.kotlin.stdlib
    implementation deps.app_compat
    implementation deps.material
    implementation deps.constraint_layout
    implementation deps.core_ktx

    //Lifecycle
    implementation deps.lifecycle.viewmodel_ktx
    implementation deps.lifecycle.livedata_ktx

    //Dagger
    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    kapt deps.dagger.compiler
    kapt deps.dagger.android_support_compiler

    //Room
    implementation deps.room.runtime
    implementation deps.room.ktx
    implementation deps.room.rxjava2
    kapt deps.room.compiler
    androidTestImplementation deps.room.testing

    //MultiDex
    implementation deps.multiDex

    //Navigation
    implementation deps.navigation.fragment_ktx
    implementation deps.navigation.runtime_ktx
    implementation deps.fragment.runtime_ktx
    implementation(deps.fragment.testing)

    //Mockk
    implementation deps.mockk

    // Espresso and UI Testing
    androidTestImplementation deps.atsl.ext_junit
    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.espresso.contrib
    androidTestImplementation deps.espresso.intents
    androidTestImplementation deps.navigation.testing
    androidTestImplementation deps.truth

    // Host-side tests
    testImplementation deps.atsl.ext_junit
    testImplementation deps.robolectric

    // Espresso API running in Robolectric
    testImplementation deps.espresso.core
    testImplementation deps.espresso.contrib
    testImplementation deps.espresso.intents
    testImplementation deps.navigation.testing
    testImplementation deps.truth
}